/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package day2;

import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

public class App {
  public static void main(String[] args) {
    URL resource = App.class.getClassLoader().getResource("input");
    List<String> input;
    try {
      input = Files.readAllLines(Paths.get(resource.getFile()));
    } catch (IOException e) {
      e.printStackTrace();
      input = List.of("");
    }
    int value = checksum(input);
    System.out.printf("Checksum: %d%n", value);

    String found = search(input);
    System.out.printf("Found: %s%n", found);
  }

  public static int checksum(List<String> input) {
    int doubles = 0;
    int triples = 0;

    for (String line : input) {
      var scanner = new Scanner();
      scanner.scan(line);
      doubles += scanner.getDoubleCount() > 0 ? 1 : 0;
      triples += scanner.getTripleCount() > 0 ? 1 : 0;
    }

    return doubles * triples;
  }

  public static String search(List<String> input) {
    int count = Integer.MAX_VALUE;
    String found = "";

    for (int i = 0; i < input.size(); i++) {
      for (int j = i + 1; j < input.size(); j++) {
        if (!input.get(i).equals(input.get(j))) {
          List<Integer> positions = Comparer.findDiffPositions(input.get(i), input.get(j));
          if (positions.size() > 0 && positions.size() < count) {
            count = positions.size();
            found = Comparer.same(input.get(i), input.get(j));
          }
        }
      }
    }

    return found;
  }
}
